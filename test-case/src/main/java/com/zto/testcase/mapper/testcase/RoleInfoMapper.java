package com.zto.testcase.mapper.testcase;

import com.zto.testcase.dto.RoleInfoExample;
import com.zto.testcase.model.RoleInfo;
import com.zto.testcase.request.RoleRequest;
import java.util.List;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;

@Mapper
public interface RoleInfoMapper {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_rolesinfo
     *
     * @mbg.generated
     */
    long countByExample(RoleInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_rolesinfo
     *
     * @mbg.generated
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_rolesinfo
     *
     * @mbg.generated
     */
    int insert(RoleInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_rolesinfo
     *
     * @mbg.generated
     */
    int insertSelective(RoleInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_rolesinfo
     *
     * @mbg.generated
     */
    List<RoleInfo> selectByExample(RoleInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_rolesinfo
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(RoleInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_rolesinfo
     *
     * @mbg.generated
     */
    int updateByPrimaryKey(RoleInfo record);

    List<RoleInfo> findAll(RoleRequest roleRequest);

    RoleInfo findByRoleCode(RoleRequest roleRequest);

    RoleInfo findByRoleName(RoleRequest roleRequest);

    List<RoleInfo> findByUserId(RoleRequest roleRequest);

    long countUserByRoleCode(RoleRequest roleRequest);

    long countSubRole(@Param("appId") String appId, @Param("creatorChain") String creatorChain);

    List<RoleInfo> findRolesByRoleCodeArray(@Param("appId") String appId,
            @Param("roleCodeList") List<String> roleCodeList);

    /**
     * 获取子角色列表
     *
     * @return
     */
    List<RoleInfo> findSubRoles(RoleRequest roleRequest);
}